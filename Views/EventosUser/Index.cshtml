@model AsitenciaUNC_attemp_2.ViewModels.IndexVM

<div class="container mx-auto p-6">
	<h1 class="text-4xl font-semibold text-black mb-6 text-center">Eventos Disponibles</h1>

	<form method="get" asp-action="Index" asp-controller="EventosUser" class="flex flex-col md:flex-row justify-center items-center gap-4">
		<!-- Input de búsqueda -->
		<div class="relative w-full max-w-md">
			<input type="text" name="buscar" value="@Model.Buscar" placeholder="Buscar..."
				   class="w-full border border-gray-300 rounded-full py-2 px-5 focus:outline-none focus:ring-2 focus:ring-black text-gray-600 placeholder-gray-400">
		</div>

		<!-- Botón de búsqueda (lupa) -->
		<button type="submit" class="flex items-center justify-center bg-black text-white rounded-full p-3 transition-colors duration-300 hover:bg-gray-800">
			<svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a4 4 0 11-8 0 4 4 0 018 0zm0 0l4 4" />
			</svg>
		</button>

		<!-- Botón de restablecer -->
		<a asp-action="Index" class="bg-gray-100 hover:bg-gray-200 text-gray-600 py-2 px-4 rounded-full transition duration-300 flex items-center">
			<i class="fa-solid fa-rotate-left"></i>
			<span class="ml-2">Restablecer</span>
		</a>
	</form>

	<!-- Segunda fila para filtros adicionales -->
	<form method="get" asp-action="Index" asp-controller="EventosUser" class="flex flex-col md:flex-row justify-center items-center gap-4 mt-6">
		<!-- Dropdown de tipo de evento -->
		<div class="relative w-full max-w-xs">
			@Html.DropDownListFor(model => model.TipoEvento, Model.TiposEventos, "Todos", new { @class = "w-full border border-gray-300 rounded-full py-2 px-5 focus:outline-none focus:ring-2 focus:ring-black text-gray-600" })
		</div>

		<!-- Input de fecha de inicio -->
		<div class="relative w-full max-w-xs">
			<input type="date" name="fechaInicio" value="@Model.FechaInicio?.ToString("yyyy-MM-dd")" class="w-full border border-gray-300 rounded-full py-2 px-5 focus:outline-none focus:ring-2 focus:ring-black text-gray-600" />
		</div>

		<!-- Input de fecha de fin -->
		<div class="relative w-full max-w-xs">
			<input type="date" name="fechaFin" value="@Model.FechaFin?.ToString("yyyy-MM-dd")" class="w-full border border-gray-300 rounded-full py-2 px-5 focus:outline-none focus:ring-2 focus:ring-black text-gray-600" />
		</div>

		<!-- Botón de aplicar filtros -->
		<button type="submit" class="bg-black text-white py-2 px-6 rounded-full transition-colors duration-300 hover:bg-gray-800">
			Aplicar filtros
		</button>
	</form>

	<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
		<!-- Validar si no hay ningún evento -->
		@if (Model.Eventos.Count == 0)
		{
			<p class="text-center text-gray-600">No se encontraron eventos</p>
		}
		else
		{
			@foreach (var evento in Model.Eventos)
			{
				<div class="border border-gray-200 rounded-lg shadow-lg bg-white hover:shadow-xl transition-shadow duration-300">
					<!-- Encabezado del evento -->
					<div class="bg-gray-50 text-black p-4 rounded-t-lg">
						<h2 class="text-xl font-bold truncate">@evento.Titulo</h2>
					</div>

					<!-- Contenido del evento -->
					<div class="p-4 space-y-2">
						<p class="text-gray-700"><strong>Fecha:</strong> @evento.FechaInicio?.ToString("MMMM dd, yyyy")</p>
						<p class="text-gray-700"><strong>Organizador:</strong> @evento.Organizador.Nombre</p>
						<p class="text-gray-700"><strong>Tipo:</strong> @evento.Tipo</p>
						<p class="text-gray-700"><strong>Fecha de Inicio:</strong>@evento.FechaInicio</p>
						<p class="text-gray-700"><strong>Fecha de Fin:</strong>@evento.FechaFinal</p>
						<p class="text-gray-700"><strong>Ubicación:</strong>@evento.Ubicacion</p>
					</div>

					<!-- Botones de acciones -->
					<div class="p-4 border-t border-gray-200 flex flex-col md:flex-row justify-between gap-3">
						<a href="@Url.Action("Detalles", "EventosUser", new { id = evento.Id })"
						   class="bg-black text-white hover:bg-gray-800 py-2 px-4 rounded-md transition-colors duration-300 text-xs">
							Ver detalles
						</a>

						<div id="registro-@evento.Id" class="flex gap-2 text-xs">
							<!-- Botón dinámico (se actualizará por JavaScript) -->
						</div>
					</div>
				</div>
			}
		}
	</div>
</div>


@section Scripts {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
		@foreach (var evento in Model.Eventos)
		{
			<text>
						 fetch(`/EventosUser/EstaRegistrado?eventoId=@evento.Id`)
								.then(response => response.json())
								.then(data => {
									   const container = document.getElementById("registro-@evento.Id");
									   if (data) {
											  container.innerHTML = `
												  <form asp-action="EliminarRegistroEvento" asp-controller="EventosUser" method="post" class="inline">
													  <input type="hidden" name="id" value="@evento.Id" />
													  <button type="submit" class="border-red-500 border hover:bg-red-600 text-red-600 hover:text-white py-2 px-4 rounded-md transition-colors duration-300">
														  Eliminar registro
													  </button>
												  </form>
												  <form method="get" asp-action="VerQr" asp-controller="EventosUser" class="inline">
													  <input type="hidden" name="idEvento" value="@evento.Id" />
												   <button type="submit" class="border-blue-600 border hover:bg-blue-600 text-blue-700 hover:text-white py-2 px-4 rounded-md transition-colors duration-300">
														  Ver código QR
													  </button>
												  </form>`;
										  } else {
											  container.innerHTML = `
												  <form asp-action="RegistrarseEvento" asp-controller="EventosUser" method="post" class="inline">
													  <input type="hidden" name="id" value="@evento.Id" />
												   <button type="submit" class="border-green-600 border hover:bg-green-600 text-green-700 hover:text-white py-2 px-4 rounded-md transition-colors duration-300">
														Registrarse en el evento
												</button>
										   </form>`;
										}
									  })
								 .catch(error => console.error('Error:', error));
			</text>
		}
				  });
	</script>
}

<!-- Paginación -->
<nav aria-label="Page navigation" class="mt-8">
	<ul class="pagination flex justify-center space-x-2">
		@for (int i = 1; i <= Model.TotalPaginas; i++)
		{
			<li class="page-item">
				<a class="page-link py-2 px-4 rounded-full border border-gray-300 @(i == Model.PaginaActual ? "bg-black text-white" : "bg-white text-black hover:bg-gray-200")"
				   asp-action="Index" asp-route-pagina="@i" asp-route-buscar="@Model.Buscar">
					@i
				</a>
			</li>
		}
	</ul>
</nav>
